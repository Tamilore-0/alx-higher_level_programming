# 0-add_integer.txt

====================
add integer function
====================

``add_integer()`` returns the addition of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator.

::
    # importing module
    >>> add_integer = __import__('0-add_integer').add_integer

    # Testing

    >>> add_integer(2, 3)
    5

    >>> add_integer(2.0, 3)
    5

    >>> add_integer(-12,  3)
    -9

    >>> add_integer(-7, -9)
    -16

    >>> add_integer(2.7, 3.1)
    5

    >>> add_integer(8.2, -3)
    5

    >>> add_integer(-1, 0)
    -1

    
    >>> add_integer(1)
    99

    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer("hello", 5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(True, 5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(5, False)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(2, "School")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer("Hello", "World")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    
    >>> add_integer(7, None)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    
    >>> add_integer(None, 8)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(6/0, 3)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> add_integer(9, 3/0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero